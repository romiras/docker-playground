upstream php-handler {
#    server 127.0.0.1:9000;
    server unix:/var/run/php/php7.2-fpm.sock;
}

server {
    listen       80;
    server_name  romiras.noip.me localhost;

    root   /var/www;


    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    location / {
        index  index.php index.html;
    }

    #Remember to comment the below out when you're installing, and uncomment it when done.
    location ~ /(conf/|bin/|inc/|install.php) { deny all; }

    #Support for X-Accel-Redirect
    location ~ ^/data/ { internal ; }

    location ~ \.php$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass php-handler;
    }


    # DokuWiki
    location /doku {
        index doku.php;
        try_files $uri $uri/ @dokuwiki;
    }

    location ~ /\.ht {
        deny all;
    }
    location ~ /(data/|conf/|bin/|inc/|install.php) {
        deny all;
    }

    location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
        expires 31536000s;
        add_header Pragma "public";
        add_header Cache-Control "max-age=31536000, public, must-revalidate, proxy-revalidate";
        log_not_found off;
    }

    location @dokuwiki {
        # rewrites "doku.php/" out of the URLs if you set the userwrite setting to .htaccess in dokuwiki config page
        rewrite ^/_media/(.*) /lib/exe/fetch.php?media=$1 last;
        rewrite ^/_detail/(.*) /lib/exe/detail.php?media=$1 last;
        rewrite ^/_export/([^/]+)/(.*) /doku.php?do=export_$1&id=$2 last;
        rewrite ^/(.*) /doku.php?id=$1&$args last;
    }


    location ~ \.php$ {
#        include snippets/fastcgi-php.conf;

        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass php-handler;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
    }

    # ownCloud
    location /owncloud {
        # enforce https
        return 301 https://$host:58443$request_uri;
    }
}

server {
    # listen on port 58443 instead of 443
    listen 58443 ssl;
#    server_name romiras.noip.me localhost;
    server_name localhost;

    ssl_certificate /etc/ssl/certs/ssl-cert-snakeoil.pem; #/etc/ssl/nginx/cert.pem;
    ssl_certificate_key /etc/ssl/private/ssl-cert-snakeoil.key; #/etc/ssl/nginx/cert.key;

    # Add headers to serve security related headers
    # Before enabling Strict-Transport-Security headers please read into this
    # topic first.
    # add_header Strict-Transport-Security "max-age=15768000;
    # includeSubDomains; preload;";
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Robots-Tag none;

    # Path to the root of your website (one level above owncloud folder)
    root /var/www;

    # set max upload size
    client_max_body_size 5G;
    fastcgi_buffers 64 4K;

    # Disable gzip to avoid the removal of the ETag header, on version < 1.7.3
    #gzip off;

    # Uncomment if your server is build with the ngx_pagespeed module
    # This module is currently not supported by ownCloud.
    #pagespeed off;

    location / {
        index  index.html;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # ownCloud blacklist
    location ~ ^/owncloud/(?:\.htaccess|data|config|db_structure\.xml|README) {
        deny all;
        error_page 403 = /owncloud/core/templates/403.php;
    }

    location = /owncloud/robots.txt {
        allow all;
        log_not_found off;
        access_log off;
    }

    location ~ ^/owncloud/(build|tests|config|lib|3rdparty|templates|data)/ {
        deny all;
    }

    location ~ ^/owncloud/(?:\.|autotest|occ|issue|indie|db_|console) {
        deny all;
    }

    location /owncloud/ {
        error_page 403 = /owncloud/core/templates/403.php;
        error_page 404 = /owncloud/core/templates/404.php;

        rewrite ^/owncloud/caldav(.*)$ /remote.php/caldav$1 redirect;
        rewrite ^/owncloud/carddav(.*)$ /remote.php/carddav$1 redirect;
        rewrite ^/owncloud/webdav(.*)$ /remote.php/webdav$1 redirect;

        rewrite ^(/owncloud/core/doc[^\/]+/)$ $1/index.html;

        # The following 2 rules are only needed for the user_webfinger app.
        # Uncomment it if you're planning to use this app.
        rewrite ^/owncloud/.well-known/host-meta /public.php?service=host-meta last;
        rewrite ^/owncloud/.well-known/host-meta.json /public.php?service=host-meta-json last;

        rewrite ^/owncloud/.well-known/carddav /remote.php/carddav/ redirect;
        rewrite ^/owncloud/.well-known/caldav /remote.php/caldav/ redirect;

        rewrite ^/owncloud/remote/(.*) /remote.php last;

        rewrite ^owncloud/(/core/doc/[^\/]+/)$ $1/index.html;

#        try_files $uri $uri/ index.php;
        try_files $uri $uri/ =404;
    }

    location ~ \.php(?:$|/) {
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_param HTTPS on;
        fastcgi_param modHeadersAvailable true; #Avoid sending the security headers twice
        fastcgi_pass php-handler;
        fastcgi_intercept_errors on;
        fastcgi_request_buffering off;
    }

    # Adding the cache control header for JS and CSS files
    # Make sure it is BELOW the location ~ \.php(?:$|/) { block
    #location ~* \.(?:css|js)$ {
    location ~* ^/owncloud(/.+\.(css|js))$ {
        add_header Cache-Control "public, max-age=7200";
        # Add headers to serve security related headers
        add_header Strict-Transport-Security "max-age=15768000; includeSubDomains; preload;";
        add_header X-Content-Type-Options nosniff;
        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-XSS-Protection "1; mode=block";
        add_header X-Robots-Tag none;
        # Optional: Don't log access to assets
        access_log off;
    }

    # Optional: Don't log access to other assets
    #location ~* \.(?:jpg|jpeg|gif|bmp|ico|png|swf)$ {
    location ~* ^/owncloud(/.+\.(jpg|jpeg|gif|bmp|ico|png|swf))$ {
        access_log off;
    }
}
